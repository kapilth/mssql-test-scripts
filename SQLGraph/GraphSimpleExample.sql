DROP TABLE IF EXISTS MACHINE;
DROP TABLE IF EXISTS SENSOR;
DROP TABLE IF EXISTS OPERATOR;
DROP TABLE IF EXISTS FACTORY;
DROP TABLE IF EXISTS PRODUCT;
DROP TABLE IF EXISTS FAILURE;
DROP TABLE IF EXISTS MONITORS;
DROP TABLE IF EXISTS WORKS_FOR;
DROP TABLE IF EXISTS PRODUCERS;
DROP TABLE IF EXISTS PART_OF;
DROP TABLE IF EXISTS ASSEMBLES;
DROP TABLE IF EXISTS REPORTS;
DROP TABLE IF EXISTS AFFECTS;

-- Create all the Nodes and Edges in the schema. Only one graph can be created per database in SQL database. Even if nodes and edges are created in different schemas, they still belong to a single graph.
CREATE TABLE MACHINE (ID INTEGER, NAME VARCHAR(50), MODEL INTEGER) AS NODE;
CREATE TABLE SENSOR (ID INTEGER, NAME VARCHAR(100)) AS NODE;
CREATE TABLE OPERATOR (ID INTEGER, NAME VARCHAR(50), PHONE BIGINT) AS NODE;
CREATE TABLE FACTORY (ID INTEGER, FACTORY_NAME VARCHAR(100), ADDRESS VARCHAR(100)) AS NODE;
CREATE TABLE PRODUCT (PRODUCT_ID INTEGER, PRODUCT_NAME VARCHAR(100)) AS NODE;
CREATE TABLE FAILURE (ID INTEGER, FAILURE_REASON VARCHAR(100), FAILURE_REPORTED_AT DATETIME) AS NODE;

-- An EDGE may or may not have any attributes associated to it
CREATE TABLE MONITORS(ISWORKING BIT) AS EDGE;
CREATE TABLE WORKS_FOR (EMPLOYED_SINCE DATETIME)  AS EDGE;
CREATE TABLE PRODUCERS AS EDGE;
CREATE TABLE PART_OF (INSTALLED_ON DATETIME) AS EDGE;
CREATE TABLE ASSEMBLES (STATUS VARCHAR(50)) AS EDGE;
CREATE TABLE REPORTS (ERR_NO INTEGER) AS EDGE;
CREATE TABLE AFFECTS (ERR_NO INTEGER) AS EDGE;

-- Now let's INSERT some data into node and edge tables.
-- Inserting into a NODE table is no different than inserting into a regular table. 
INSERT INTO MACHINE VALUES (1,'Chassis Assembly',1111 ),
			(2, 'Axle and Tire Assembly',2222),
			(3, 'Engine Assembly', 3333);

INSERT INTO SENSOR VALUES (1, 'Optic Sensor'), (2, 'Wheel Speed Sensor'), (3, 'Engine Speed Sensor'); 
INSERT INTO OPERATOR VALUES (1, 'BOB', 123456),(2, 'JAMES', 234567),(3, 'JOHANNA', 456789);
INSERT INTO FACTORY VALUES (8, 'Munich  Group Plant','Munich');

INSERT INTO PRODUCT VALUES(1, ' 1 Series'),(2, 'Contoso Ltd. 3 Series'), (3, 'Contoso Ltd. 5 Series');

-- failures detected by Wheel speed sensor and airflow meter.
INSERT INTO FAILURE VALUES(1, 'Less Stability under icy or wet driving conditions', '10/20/2016'),
		(2, 'Hesitation and jerking during acceleration', '10/2/2016');

-- While inserting into an EDGE table, you need to specify which 2 nodes in your schema this edge connects. That is, you have to specify a FROM node (the node where this edge starts) and a TO node (the node where this edge ends).
-- You can select the $NODEID from the node table and insert into the EDGE table, using an INSERT statement similar to one below: 
INSERT INTO MONITORS VALUES((SELECT $NODEID FROM SENSOR WHERE ID = 1), (SELECT $NODEID FROM MACHINE WHERE ID =1), 1 );
INSERT INTO MONITORS VALUES((SELECT $NODEID FROM SENSOR WHERE ID = 2), (SELECT $NODEID FROM MACHINE WHERE ID =2), 1 );

DECLARE @fromNode nvarchar(64), @toNode nvarchar(64)
SELECT @fromNode = S.$nodeid FROM SENSOR S WHERE ID = 3
SELECT @toNode = M.$nodeid FROM MACHINE M WHERE ID = 3
INSERT INTO MONITORS ($fromid, $toid, ISWORKING) VALUES (@fromNode, @toNode, 1 );

INSERT INTO WORKS_FOR VALUES((SELECT $NODEID FROM OPERATOR WHERE ID = 1), (SELECT $NODEID FROM FACTORY WHERE ID=8), '10/10/2010');
INSERT INTO WORKS_FOR VALUES((SELECT $NODEID FROM OPERATOR WHERE ID = 2), (SELECT $NODEID FROM FACTORY WHERE ID=8), '10/10/2010');
INSERT INTO WORKS_FOR VALUES((SELECT $NODEID FROM OPERATOR WHERE ID = 3), (SELECT $NODEID FROM FACTORY WHERE ID=8), '10/10/2010');

INSERT INTO PRODUCERS VALUES((SELECT $NODEID FROM FACTORY WHERE ID=8),(SELECT $NODEID FROM PRODUCT WHERE PRODUCT_ID =1));
INSERT INTO PRODUCERS VALUES((SELECT $NODEID FROM FACTORY WHERE ID=8),(SELECT $NODEID FROM PRODUCT WHERE PRODUCT_ID =2));
INSERT INTO PRODUCERS VALUES((SELECT $NODEID FROM FACTORY WHERE ID=8),(SELECT $NODEID FROM PRODUCT WHERE PRODUCT_ID =3));

INSERT INTO PART_OF VALUES((SELECT $NODEID FROM MACHINE WHERE ID=1),(SELECT $NODEID FROM FACTORY WHERE ID =8), '10/10/2000' );
INSERT INTO PART_OF VALUES((SELECT $NODEID FROM MACHINE WHERE ID=2),(SELECT $NODEID FROM FACTORY WHERE ID =8), '09/21/2016');
INSERT INTO PART_OF VALUES((SELECT $NODEID FROM MACHINE WHERE ID=3),(SELECT $NODEID FROM FACTORY WHERE ID =8), '07/30/2016' );

INSERT INTO ASSEMBLES VALUES((SELECT $NODEID FROM MACHINE WHERE ID=1),(SELECT $NODEID FROM PRODUCT WHERE PRODUCT_ID =1) , 'ACTIVE');
INSERT INTO ASSEMBLES VALUES((SELECT $NODEID FROM MACHINE WHERE ID=2),(SELECT $NODEID FROM PRODUCT WHERE PRODUCT_ID =1) , 'ACTIVE');
INSERT INTO ASSEMBLES VALUES((SELECT $NODEID FROM MACHINE WHERE ID=3),(SELECT $NODEID FROM PRODUCT WHERE PRODUCT_ID =1) , 'ACTIVE');

INSERT INTO ASSEMBLES VALUES((SELECT $NODEID FROM MACHINE WHERE ID=1),(SELECT $NODEID FROM PRODUCT WHERE PRODUCT_ID =2) , 'ACTIVE');
INSERT INTO ASSEMBLES VALUES((SELECT $NODEID FROM MACHINE WHERE ID=2),(SELECT $NODEID FROM PRODUCT WHERE PRODUCT_ID =2) , 'ACTIVE');
INSERT INTO ASSEMBLES VALUES((SELECT $NODEID FROM MACHINE WHERE ID=3),(SELECT $NODEID FROM PRODUCT WHERE PRODUCT_ID =2) , 'ACTIVE');

INSERT INTO ASSEMBLES VALUES((SELECT $NODEID FROM MACHINE WHERE ID=1),(SELECT $NODEID FROM PRODUCT WHERE PRODUCT_ID =3) , 'ACTIVE');
INSERT INTO ASSEMBLES VALUES((SELECT $NODEID FROM MACHINE WHERE ID=2),(SELECT $NODEID FROM PRODUCT WHERE PRODUCT_ID =3) , 'ACTIVE');
INSERT INTO ASSEMBLES VALUES((SELECT $NODEID FROM MACHINE WHERE ID=3),(SELECT $NODEID FROM PRODUCT WHERE PRODUCT_ID =3) , 'ACTIVE');

INSERT INTO REPORTS VALUES ((SELECT $NODEID FROM MACHINE WHERE ID=2),(SELECT $NODEID FROM FAILURE WHERE ID =1), 1234);
INSERT INTO REPORTS VALUES ((SELECT $NODEID FROM MACHINE WHERE ID=3),(SELECT $NODEID FROM FAILURE WHERE ID =2), 456);

INSERT INTO AFFECTS VALUES ((SELECT $NODEID FROM FAILURE WHERE ID = 1),(SELECT $NODEID FROM MACHINE WHERE ID=2), 1234);
INSERT INTO AFFECTS VALUES ((SELECT $NODEID FROM FAILURE WHERE ID = 2),(SELECT $NODEID FROM MACHINE WHERE ID=3), 456);

-- Once all the data is populated, let's try some queries to see how the new MATCH syntax works
-- Let's list all the machines that are reporting failure and machines affected by that.
SELECT S.NAME AS SENSOR, 
	   M.NAME AS MACHINE, 
	   F.FAILURE_REASON, 
	   M1.NAME AFFECTED_MACHINE
FROM SENSOR S, MACHINE M, MONITORS MO, 
	REPORTS R, FAILURE F, AFFECTS A, MACHINE M1
WHERE MATCH(S-(MO)->M-(R)->F-(A)->M1)
GO

-- Find the machines which are affected by the failure 
-- and the product, whose production will be affected in turn.
SELECT DISTINCT M.NAME Machine_with_error, 
	   P.PRODUCT_NAME AS Affected_Product
FROM SENSOR S, MONITORS MO, MACHINE M, REPORTS R, 
	FAILURE F, AFFECTS A, MACHINE M1, ASSEMBLES A1, PRODUCT P
WHERE MATCH(S-(MO)->M-(R)->F-(A)->M1-(A1)->P)
GO

-- This query will also find the Factory which produces 
--the product, which is affected by the machine failure above.
-- Note that arrows in MATCH function can go in either direction.
SELECT DISTINCT P.PRODUCT_NAME AS Affected_Products,
	   FA.FACTORY_NAME AS Producing_Factory
FROM SENSOR O, MONITORS MO, MACHINE M, REPORTS R, FAILURE F, 
AFFECTS A, MACHINE M1, ASSEMBLES A1, PRODUCT P, FACTORY FA, PRODUCERS PP
WHERE MATCH(O-(MO)->M-(R)->F-(A)->M1-(A1)->P<-(PP)-FA)
GO
